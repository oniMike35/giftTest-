{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,mCACA,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,eACRN,EAAWO,OAAOC,OAAO,IACzBV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OACrCR,EAAc,MAOlB,SACI,uBACIS,KAAO,OACPC,MAAOX,EACPY,SAtBe,SAACT,GACxBE,QAAQC,IAAIH,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,e,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGTC,EAHS,iDAGyCC,UAAUH,GAHnD,gEAIKI,MAAMF,GAJX,cAITG,EAJS,gBAKOA,EAAKC,OALZ,uBAKRC,EALQ,EAKRA,KACPjB,QAAQC,IAAIgB,GACNC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAX1B,kBAcRM,GAdQ,4CAAH,sDCEPO,EAAe,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IACpC,OACI,sBAAKc,UAAU,0CAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAOrB,ECTwB,SAACA,GACzB,MAA0BhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KA4BA,OAvBAC,qBAAU,WACNxB,EAASC,GAAUwB,MAAM,SAAAC,GACjBH,EAAS,CACTf,KAAKkB,EACLL,SAAQ,SAGjB,CAACpB,IAgBGqB,EDpBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAgCpB,OA/BA9B,QAAQC,IAAIsB,GACZvB,QAAQC,IAAI6B,GA+BR,eAAC,WAAD,WACI,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEhD5BgB,EAAe,WAExB,MAAoC3C,mBAAU,CAAC,cAA/C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAaA,OACI,qCACI,yCAED,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACC,6BAGQ6C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACAA,SAAWA,GACLA,Y,MCzB9B6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5b768160.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleImputChange =  (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('submit echo');\r\n        if (inputValue.trim().length>0 ) {\r\n            setCategories(cats => [inputValue,...cats ]) ;\r\n            setInputValue('');\r\n        }\r\n\r\n       \r\n    }\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>            \r\n            <input \r\n                type = \"text\"\r\n                value={inputValue}\r\n                onChange={handleImputChange}\r\n            />\r\n        </form>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    //const [count, setcount] = useState(0);^^^```\r\n           // const url  = 'https://api.giphy.com/v1/gifs/search?api_key=bJi4C46TLyZPimQmMqw5MHgEF42Q7D9j&q=Rick and morty&limit=10';\r\n        const url  = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=bJi4C46TLyZPimQmMqw5MHgEF42Q7D9j&`;\r\n        const resp =  await fetch(url);\r\n        const {data} =  await resp.json();\r\n        console.log(data);\r\n        const gift = data.map(img => {\r\n            return {\r\n                id: img.id  ,\r\n                title:img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        })\r\n        return gift;\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GiftGridItem = ( {id,title,url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce \">\r\n           <img src={url} alt={title} ></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n        \r\n   // const [images, setimages] = useState([]);\r\n   /* useEffect(  () => {\r\n        getGifs(category).then( imgs =>setimages(imgs))\r\n    }, [category])*/\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    console.log(images);\r\n    console.log(loading);\r\n    \r\n\r\n\r\n      /*  useEffect(  () => {\r\n            GifGrid();\r\n        }, [])\r\n    */\r\n        /*\r\n        const GifGrid = async() => {\r\n        //const [count, setcount] = useState(0);^^^```\r\n           // const url  = 'https://api.giphy.com/v1/gifs/search?api_key=bJi4C46TLyZPimQmMqw5MHgEF42Q7D9j&q=Rick and morty&limit=10';\r\n           const url  = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=bJi4C46TLyZPimQmMqw5MHgEF42Q7D9j&`;\r\n            const resp =  await fetch(url);\r\n            const {data} =  await resp.json();\r\n            console.log(data);\r\n            const gift = data.map(img => {\r\n                return {\r\n                    id: img.id  ,\r\n                    title:img.title,\r\n                    url: img.images.downsized_medium.url\r\n                }\r\n            })\r\n            setimages(gift);\r\n            console.log(gift);\r\n        }*/\r\n\r\n  \r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <h3>{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className='card-grid'>\r\n                    {\r\n                        images.map( img => (\r\n                            <GiftGridItem \r\n                                key={img.id}\r\n                                {...img} />\r\n                            ))\r\n                    }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import{useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifs( category).then( imgs => {\r\n                setstate({\r\n                data:imgs,\r\n                loading:false\r\n                });\r\n        })      \r\n    }, [category])\r\n\r\n    /*    \r\n    useEffect(  () => {\r\n        GifGrid();\r\n    }, [])\r\n*/\r\n    /*setTimeout(() => {\r\n        setstate({\r\n            data:[1,2,3,4,5],\r\n            loading:false\r\n        })\r\n    }, 3000);*/\r\n\r\n\r\n\r\n    return state;\r\n\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['one Punch', 'Samuria X', 'Dragon ball' ];    \r\n    const [categories, setCategories] = useState( ['one Punch' ]);\r\n\r\n    //const handleAdd = () =>{\r\n        //categories.push('michael');\r\n        //console.log(categories);\r\n      //  setCategories([...categories,'HunterX']) ;\r\n       // setCategories(['HunterX',...categories]) ;\r\n   // }\r\n   /*\r\n   { categories.map( (categories) => {\r\n    return <li key={categories}>{categories}</li>\r\n    }) }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>Testing</h2>\r\n          \r\n           <AddCategory setCategories = {setCategories}/>\r\n           <hr />\r\n            <ol>\r\n                {\r\n                   \r\n                    categories.map(category =>(\r\n                        <GifGrid \r\n                        category= {category}\r\n                        key= {category} \r\n                        />\r\n                    )) \r\n                }\r\n               \r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}